<Project>
    <!--
        to copy the template PublishConfiguration.xml (PublishConfigurationPathFrom) to
        the ones (PublishConfigurationPath) that is used by Colossal Orders Mod.targets
        
        to fill the ones that is used by Colossal Orders Mod.targets with:
        - ModVersion (this projects assemblyversion)
        - LongDescription (is read from project-dir/README.md)
        - ChangeLog (is read from project-dir/CHANGELOG.CURRENT.md)
        
        if the mod got published
            to prepend the changelog-history (project-dir/CHANGELOG.md) with CHANGELOG.CURRENT.md
        
    -->
    <Target Name="CopyPublishConfiguration" BeforeTargets="BeforeBuild">
        <!-- copy template publishconfiguration to the publishconfiguration path used within Mod.targets -->
        <Copy SourceFiles="$(PublishConfigurationPathFrom)" DestinationFiles="$(PublishConfigurationPath)" />
    </Target>



    <Target
        Name="PokeInfosToPublishConfiguration"
        AfterTargets="CopyPublishConfiguration">
        <!-- fill copied publishconfiguration with required values -->

        <!-- https://learn.microsoft.com/dotnet/api/microsoft.build.tasks.xmlpeek?view=msbuild-17-netcore -->
        <!-- https://learn.microsoft.com/dotnet/api/microsoft.build.tasks.xmlpoke?view=msbuild-17-netcore -->


        <!-- assemblyversion to modversion -->
        <XmlPoke
            Value="$(AssemblyVersion)"
            XmlInputPath="$(PublishConfigurationPath)"
            Query=".//Publish/ModVersion/@Value" />


        <XmlPoke
            Value="$([System.IO.File]::ReadAllText('$(ProjectDir)\README.md'))"
            XmlInputPath="$(PublishConfigurationPath)"
            Query=".//Publish/LongDescription" />


        <XmlPoke
            Value="$([System.IO.File]::ReadAllText('$(ProjectDir)\CHANGELOG.CURRENT.md'))"
            XmlInputPath="$(PublishConfigurationPath)"
            Query=".//Publish/ChangeLog" />
    </Target>


    <Target
        Name="WriteNewChangeLog"
        BeforeTargets="BeforeBuild"
        DependsOnTargets="PokeInfosToPublishConfiguration">
        <!-- beforetarget 'Publish' indicates final publish -->
        <!-- prepend changelog-history with current changelogs lines -->
        <!-- uses items from depend-target -->
        <PropertyGroup>
            <ModChangeLogHistory>$(ProjectDir)\Properties\CHANGELOG.HISTORY.md</ModChangeLogHistory>
            <ModChangeLog>$(ProjectDir)\CHANGELOG.md</ModChangeLog>
        </PropertyGroup>
        <ItemGroup>
            <ChangeLogContent
                Include="$([System.IO.File]::ReadAllText('$(ProjectDir)\CHANGELOG.CURRENT.md'))" />
            <ChangeLogContent
                Include="$([System.IO.File]::ReadAllText('$(ModChangeLogHistory)'))" />
        </ItemGroup>
        <WriteLinesToFile
            File="$(ModChangeLog)"
            Lines="@(ChangeLogContent)"
            Overwrite="true"
            />
    </Target>


    <Target
        Name="CopyChangeLogToHistory"
        AfterTargets="RunModPublisher">
        <!-- aftertarget 'RunModPublisher' indicates final publish -->
        <Copy
            SourceFiles="$(ModChangeLog)"
            DestinationFiles="$(ModChangeLogHistory)"/>
    </Target>


    <Target
        Name="HashInf"
        AfterTargets="RunModPostProcessor">
        <ItemGroup>
            <FileToHashInf Include="$(OutDir)TranslateCS2.Inf.dll" />
            <FileToHashInfHash Include="$(ProjectDir)TranslateCS2.Inf.dll.hash" />
        </ItemGroup>
        <GetFileHash
            Files="@(FileToHashInf)"
            Algorithm="SHA512">
            <Output
                TaskParameter="Hash"
                ItemName="FileHashInf" />
        </GetFileHash>

        <Message Importance="High"
                 Text="File: @(FileToHashInf) Hash: @(FileHashInf)" />
        <WriteLinesToFile
            File="@(FileToHashInfHash)"
            Lines="@(FileHashInf)"
            Overwrite="true"
            />
    </Target>
    <Target
        Name="HashMod"
        AfterTargets="RunModPostProcessor">
        <ItemGroup>
            <FileToHashMod Include="$(OutDir)TranslateCS2.Mod.dll" />
            <FileToHashModHash Include="$(ProjectDir)TranslateCS2.Mod.dll.hash" />
        </ItemGroup>
        <GetFileHash
            Files="@(FileToHashMod)"
            Algorithm="SHA512">
            <Output
                TaskParameter="Hash"
                ItemName="FileHashMod" />
        </GetFileHash>

        <Message Importance="High"
                 Text="File: @(FileToHashMod) Hash: @(FileHashMod)" />
        <WriteLinesToFile
            File="@(FileToHashModHash)"
            Lines="@(FileHashMod)"
            Overwrite="true"
            />
    </Target>
    <Target
        Name="HashSO"
        AfterTargets="RunModPostProcessor">
        <ItemGroup>
            <FileToHashSO Include="$(OutDir)TranslateCS2.Mod_linux_x86_64.so" />
            <FileToHashSOHash Include="$(ProjectDir)TranslateCS2.Mod_linux_x86_64.so.hash" />
        </ItemGroup>
        <GetFileHash
            Files="@(FileToHashSO)"
            Algorithm="SHA512">
            <Output
                TaskParameter="Hash"
                ItemName="FileHashSO" />
        </GetFileHash>

        <Message Importance="High"
                 Text="File: @(FileToHashSO) Hash: @(FileHashSO)" />
        <WriteLinesToFile
            File="@(FileToHashSOHash)"
            Lines="@(FileHashSO)"
            Overwrite="true"
            />
    </Target>
    <Target
        Name="HashBundle"
        AfterTargets="RunModPostProcessor">
        <ItemGroup>
            <FileToHashBundle Include="$(OutDir)TranslateCS2.Mod_mac_x86_64.bundle" />
            <FileToHashBundleHash Include="$(ProjectDir)TranslateCS2.Mod_mac_x86_64.bundle.hash" />
        </ItemGroup>
        <GetFileHash
            Files="@(FileToHashBundle)"
            Algorithm="SHA512">
            <Output
                TaskParameter="Hash"
                ItemName="FileHashBundle" />
        </GetFileHash>

        <Message Importance="High"
                 Text="File: @(FileToHashBundle) Hash: @(FileHashBundle)" />
        <WriteLinesToFile
            File="@(FileToHashBundleHash)"
            Lines="@(FileHashBundle)"
            Overwrite="true"
            />
    </Target>
    <Target
        Name="HashWIN"
        AfterTargets="RunModPostProcessor">
        <ItemGroup>
            <FileToHashWIN Include="$(OutDir)TranslateCS2.Mod_win_x86_64.dll" />
            <FileToHashWINHash Include="$(ProjectDir)TranslateCS2.Mod_win_x86_64.dll.hash" />
        </ItemGroup>
        <GetFileHash
            Files="@(FileToHashWin)"
            Algorithm="SHA512">
            <Output
                TaskParameter="Hash"
                ItemName="FileHashWIN" />
        </GetFileHash>

        <Message Importance="High"
                 Text="File: @(FileToHashWIN) Hash: @(FileHashWIN)" />
        <WriteLinesToFile
            File="@(FileToHashWINHash)"
            Lines="@(FileHashWIN)"
            Overwrite="true"
            />
    </Target>
</Project>
